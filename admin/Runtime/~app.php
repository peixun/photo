<?php  if (! defined ( 'THINK_PATH' )) exit (); require './global/common.php'; function getTabeSize($a, $b) { return byte_format ( $a + $b ); } function byte_format($size, $dec = 2) { $a = array ("B", "KB", "MB", "GB", "TB", "PB" ); $pos = 0; while ( $size >= 1024 ) { $size /= 1024; $pos ++; } return round ( $size, $dec ) . " " . $a [$pos]; } function sysConfL($key) { if (preg_match ( "/TITLE_DEFAULT_LANG_/", $key, $res )) { $key = str_replace ( "TITLE_DEFAULT_LANG_", "", $key ); return $key; } return L ( $key ); } function get_client_ip() { if (getenv ( "HTTP_CLIENT_IP" ) && strcasecmp ( getenv ( "HTTP_CLIENT_IP" ), "unknown" )) $ip = getenv ( "HTTP_CLIENT_IP" ); else if (getenv ( "HTTP_X_FORWARDED_FOR" ) && strcasecmp ( getenv ( "HTTP_X_FORWARDED_FOR" ), "unknown" )) $ip = getenv ( "HTTP_X_FORWARDED_FOR" ); else if (getenv ( "REMOTE_ADDR" ) && strcasecmp ( getenv ( "REMOTE_ADDR" ), "unknown" )) $ip = getenv ( "REMOTE_ADDR" ); else if (isset ( $_SERVER ['REMOTE_ADDR'] ) && $_SERVER ['REMOTE_ADDR'] && strcasecmp ( $_SERVER ['REMOTE_ADDR'], "unknown" )) $ip = $_SERVER ['REMOTE_ADDR']; else $ip = "unknown"; return ($ip); } function cmssavecache($name = '', $fields = '') { $Model = D ( $name ); $list = $Model->select (); $data = array (); foreach ( $list as $key => $val ) { if (empty ( $fields )) { $data [$val [$Model->getPk ()]] = $val; } else { if (is_string ( $fields )) { $fields = explode ( ',', $fields ); } if (count ( $fields ) == 1) { $data [$val [$Model->getPk ()]] = $val [$fields [0]]; } else { foreach ( $fields as $field ) { $data [$val [$Model->getPk ()]] [] = $val [$field]; } } } } $savefile = cmsgetcache ( $name ); $content = "<?php\nreturn " . var_export ( array_change_key_case ( $data, CASE_UPPER ), true ) . ";\n?>"; file_put_contents ( $savefile, $content ); } function cmsgetcache($name = '') { return DATA_PATH . '~' . strtolower ( $name ) . '.php'; } function getStatus($status, $imageShow = true) { switch ($status) { case 0 : $showText = L ( "FORBID" ); $showImg = '<IMG SRC="' . APP_TMPL_PATH . '/ThemeFiles/Images/locked.gif" WIDTH="20" HEIGHT="20" BORDER="0" ALT="' . L ( "FORBID" ) . '">'; break; case 1 : $showText = L ( "NORMAL" ); $showImg = '<IMG SRC="' . APP_TMPL_PATH . '/ThemeFiles/Images/ok.gif" WIDTH="20" HEIGHT="20" BORDER="0" ALT="' . L ( "NORMAL" ) . '">'; break; } return ($imageShow === true) ? $showImg : $showText; } function getMailStatus($status) { switch ($status) { case 0 : $showText = L ( "MAIL_STATUS_0" ); break; case 1 : $showText = L ( "MAIL_STATUS_1" ); break; } return $showText; } function IP($ip = '', $file = 'UTFWry.dat') { $_ip = array (); if (isset ( $_ip [$ip] )) { return $_ip [$ip]; } else { import ( "ORG.Net.IpLocation" ); $iplocation = new IpLocation ( $file ); $location = $iplocation->getlocation ( $ip ); $_ip [$ip] = $location ['country'] . $location ['area']; } return $_ip [$ip]; } function getNodeName($id) { if (Session::is_set ( 'nodeNameList' )) { $name = Session::get ( 'nodeNameList' ); return $name [$id]; } $Group = D ( "Node" ); $list = $Group->getField ( 'id,name' ); $name = $list [$id]; Session::set ( 'nodeNameList', $list ); return $name; } function showStatus($status, $id) { switch ($status) { case 0 : $info = '<a href="javascript:resume(' . $id . ')">' . L ( "RESUME" ) . '</a>'; break; case 2 : $info = '<a href="javascript:pass(' . $id . ')">' . L ( "PASS" ) . '</a>'; break; case 1 : $info = '<a href="javascript:forbid(' . $id . ')">' . L ( "FORBID" ) . '</a>'; break; case - 1 : $info = '<a href="javascript:recycle(' . $id . ')">' . L ( "RECYCLE" ) . '</a>'; break; } return $info; } function showActive($status, $id) { switch ($status) { case 2 : $info = '<a href="javascript:resumeActive(' . $id . ')">' . L ( "RESUME" ) . '</a>'; break; case 0 : $info = '<a href="javascript:passActive(' . $id . ')">' . L ( "PASS" ) . '</a>'; break; case 1 : $info = '<a href="javascript:forbidActive(' . $id . ')">' . L ( "FORBID" ) . '</a>'; break; case - 1 : $info = '<a href="javascript:recycleActive(' . $id . ')">' . L ( "RECYCLE" ) . '</a>'; break; } return $info; } function showStatusJq($status, $id) { switch ($status) { case 0 : $info = '<a href="javascript:resumeJq(' . $id . ')">' . L ( "RESUME" ) . '</a>'; break; case 2 : $info = '<a href="javascript:passJq(' . $id . ')">' . L ( "PASS" ) . '</a>'; break; case 1 : $info = '<a href="javascript:forbidJq(' . $id . ')">' . L ( "FORBID" ) . '</a>'; break; case - 1 : $info = '<a href="javascript:recycleJq(' . $id . ')">' . L ( "RECYCLE" ) . '</a>'; break; } return $info; } function getInputType($status) { switch ($status) { case 0 : $info = L ( "INPUT_TYPE_0" ); break; case 1 : $info = L ( "INPUT_TYPE_1" ); break; } return $info; } function build_verify($length = 4, $mode = 1) { return rand_string ( $length, $mode ); } function sort_by($array, $keyname = null, $sortby = 'asc') { $myarray = $inarray = array (); foreach ( $array as $i => $befree ) { $myarray [$i] = $array [$i] [$keyname]; } switch ($sortby) { case 'asc' : asort ( $myarray ); break; case 'desc' : case 'arsort' : arsort ( $myarray ); break; case 'natcasesor' : natcasesort ( $myarray ); break; } foreach ( $myarray as $key => $befree ) { $inarray [] = $array [$key]; } return $inarray; } function rand_string($len = 6, $type = '', $addChars = '') { $str = ''; switch ($type) { case 0 : $chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' . $addChars; break; case 1 : $chars = str_repeat ( '0123456789', 3 ); break; case 2 : $chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' . $addChars; break; case 3 : $chars = 'abcdefghijklmnopqrstuvwxyz' . $addChars; break; default : $chars = 'ABCDEFGHIJKMNPQRSTUVWXYZabcdefghijkmnpqrstuvwxyz23456789' . $addChars; break; } if ($len > 10) { $chars = $type == 1 ? str_repeat ( $chars, $len ) : str_repeat ( $chars, 5 ); } if ($type != 4) { $chars = str_shuffle ( $chars ); $str = substr ( $chars, 0, $len ); } else { for($i = 0; $i < $len; $i ++) { $str .= msubstr ( $chars, floor ( mt_rand ( 0, mb_strlen ( $chars, 'utf-8' ) - 1 ) ), 1 ); } } return $str; } function pwdHash($password, $type = 'md5') { return md5 ( $password ); } function checkUrl($url) { if (strtolower ( substr ( $url, 0, 7 ) ) == "http://") return TRUE; else return false; } function gtZero($id) { return $id > 0; } function localStrToTime($str) { $timezone = intval ( eyooC ( 'TIME_ZONE' ) ); $time = strtotime ( $str ) - $timezone * 3600; return $time; } function localStrToTimeMax($str) { if ($str != '') { $str = date ( "Y-m-d H:i:s", strtotime ( $str ) ); return localStrToTime ( $str ); } else { return 0; } } function localStrToTimeMin($str) { if ($str != '') { $str = date ( "Y-m-d H:i:s", strtotime ( $str ) ); return localStrToTime ( $str ); } else { return 0; } } function timeToLocalStr($time, $format = 'Y-m-d H:i:s') { return toDate ( $time, $format ); } function checkDateFormat($dateStr) { if (preg_match ( "/\b\d{4}-\d{2}-\d{2}\b/i", $dateStr ) == 1) return true; else return false; } function parseToTimeSpan($dateStr) { if ($dateStr) { $dataArr = explode ( "-", $dateStr ); return mktime ( 0, 0, 0, intval ( $dataArr [1] ), intval ( $dataArr [2] ), intval ( $dataArr [0] ) ); } else { return 0; } } function parseToTimeSpanFull($dateStr) { if ($dateStr) { $arr = explode ( " ", $dateStr ); $dataArr = explode ( "-", $arr [0] ); $timeArr = explode ( ":", $arr [1] ); return mktime ( intval ( $timeArr [0] ), intval ( $timeArr [1] ), intval ( $timeArr [2] ), intval ( $dataArr [1] ), intval ( $dataArr [2] ), intval ( $dataArr [0] ) ); } else { return 0; } } function getArticleCateType($type) { switch ($type) { case '0' : return L ( "ARTICLE_CATE_TYPE_0" ); case '1' : return L ( "ARTICLE_CATE_TYPE_1" ); case '2' : return L ( "ARTICLE_CATE_TYPE_2" ); case '3' : return L ( "ARTICLE_CATE_TYPE_3" ); case '4' : return L ( "ARTICLE_CATE_TYPE_4" ); } } function priceFormat($num) { return eyooC ( "BASE_CURRENCY_UNIT" ) . number_format ( round ( $num, 2 ), 2 ); } function priceVal($num) { return str_replace ( ",", "", number_format ( round ( $num, 2 ), 2 ) ); } function getRegionName($arr) { return $arr ['name']; } function getNavType($type) { switch ($type) { case '1' : return L ( 'NAV_TYPE_1' ); case '2' : return L ( 'NAV_TYPE_2' ); case '3' : return L ( 'NAV_TYPE_3' ); } } function getLinkType($type) { switch ($type) { case '1' : return L ( 'LINK_TYPE_1' ); case '2' : return L ( 'LINK_TYPE_2' ); case '0' : return L ( 'LINK_TYPE_0' ); } } function getLogResult($rs) { if ($rs == 1) return L ( 'LOG_SUCCESS' ); else return L ( 'LOG_FAILED' ); } function getLang($var) { return L ( "LOG_" . $var ); } function getAuthType($type) { switch ($type) { case '1' : return L ( 'AUTH_TYPE_1' ); case '2' : return L ( 'AUTH_TYPE_2' ); case '0' : return L ( 'AUTH_TYPE_0' ); } } function getNode($arr, $field) { if ($field == "auth_type") { return getAuthType ( $arr [$field] ); } else return $arr [$field]; } function getAdvType($type) { switch ($type) { case '1' : return L ( 'ADV_TYPE_1' ); case '2' : return L ( 'ADV_TYPE_2' ); case '3' : return L ( 'ADV_TYPE_3' ); } } function getUserName($user_id) { if (D ( "User" )->where ( "id=" . $user_id )->getField ( "user_name" )) { return D ( "User" )->where ( "id=" . $user_id )->getField ( "user_name" ); } else { return L ( "NO_USER" ); } } function getRUserName($user_id) { if (D ( "User" )->where ( "id=" . $user_id )->getField ( "user_name" )) { return D ( "User" )->where ( "id=" . $user_id )->getField ( "user_name" ); } else { return "无推荐人"; } } function check_mail($mail) { if (! preg_match ( "/\w+@\w+\.\w{2,}\b/", $mail )) { return false; } else { return true; } } function check_time($timestr) { if (preg_match ( "/\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}/", $timestr )) { return true; } else { return false; } } function formatScore($score) { return $score . " " . L ( "SCORE_UNIT" ); } function countScore($score) { return $score * eyooC ( "SCORE_RADIO" ); } function showStatusIncharge($status, $id) { switch ($status) { case 0 : $info = '<a href="javascript:resumeIncharge(' . $id . ')">' . L ( "CONFIRM" ) . '</a>'; break; case 1 : $info = '<a href="javascript:forbidIncharge(' . $id . ')">' . L ( "CANCEL" ) . '</a>'; break; } return $info; } function unescape($str, $charcode = "") { $text = preg_replace_callback ( "/%u[0-9A-Za-z]{4}/", "toUtf8", $str ); if (empty ( $charcode )) { return $text; } else { return mb_convert_encoding ( $text, $charcode, "utf-8" ); } } function toUtf8($ar) { $c = ""; foreach ( $ar as $val ) { $val = intval ( substr ( $val, 2 ), 16 ); if ($val < 0x7F) { $c .= chr ( $val ); } elseif ($val < 0x800) { $c .= chr ( 0xC0 | ($val / 64) ); $c .= chr ( 0x80 | ($val % 64) ); } else { $c .= chr ( 0xE0 | (($val / 64) / 64) ); $c .= chr ( 0x80 | (($val / 64) % 64) ); $c .= chr ( 0x80 | ($val % 64) ); } } return $c; } function showNavStatus($status, $id) { switch ($status) { case 0 : $info = '<a href="javascript:resume(' . $id . ')">' . L ( "RESUME" ) . '</a>'; break; case 2 : $info = '<a href="javascript:pass(' . $id . ')">' . L ( "PASS" ) . '</a>'; break; case 1 : $info = '<a href="javascript:forbid(' . $id . ')">' . L ( "FORBID" ) . '</a>'; break; case - 1 : $info = '<a href="javascript:recycle(' . $id . ')">' . L ( "RECYCLE" ) . '</a>'; break; } return $info; } function showNavDel($id) { $info = '<a href="javascript:foreverdel(' . $id . ')">' . L ( "DELETE" ) . '</a>'; return $info; } function getAdmName($id) { return M ( "Admin" )->where ( "id=" . $id )->getField ( "adm_name" ); } function getHiddenBox($id) { return $id . "<input type='hidden' name='hiddenid[]' value='" . $id . "' />"; } function formatPrice($price, $radio) { $price = round ( floatval ( $price ), 2 ); $price = eyooC ( "BASE_CURRENCY_UNIT" ) . $price; return $price; } function checkArticleUName($uname) { $id = intval ( $_REQUEST ['id'] ); if (M ( "Article" )->where ( "u_name='" . $uname . "' and id <> $id" )->count () == 0) { return true; } else return false; } function get_role_name($id) { $admin = M ( "Admin" )->getById ( $id ); if ($admin ['adm_name'] == eyooC ( "SYS_ADMIN" )) { return "<span style='color:#f30;'>默认管理员</span>"; } else return M ( "Role" )->where ( "id=" . $admin ['role_id'] )->getField ( "name" ); } function getArticleCate($type) { $class = D ( "Article_cate" )->where ( "id=" . $type )->find (); return $class ['name_1']; } function getImages($img){ return '<img src="__PUBLIC__/upload/Flashimg/'.$img.'" width="200" />'; } function getPid($id) { $RegionConf = D ( "RegionConf" ); $regWhere ["id"] = $id; $regionConf = $RegionConf->where ( $regWhere )->find (); return $regionConf ["pid"]; } function getPidName($id) { $RegionConf = D ( "RegionConf" ); $regWhere ["id"] = $id; $regionConf = $RegionConf->where ( $regWhere )->find (); return $regionConf ["name"]; } function getSort($sort, $goods_id) { $str = "<span onclick='changeSort(this," . $goods_id . ")' title='" . L ( "CLICK_TO_CHANGE" ) . "'>" . $sort . "</span>"; return $str; } function showArticle($status){ switch ($status) { case 1: $showImg = '<IMG SRC="__PUBLIC__/images/allow.gif"   BORDER="0" ALT="正常">'; break; } return $showImg; } function showArticleStatus($status, $id) { switch ($status) { case 0 : $info = '<a href="javascript:onTop(' . $id . ')">置顶</a>'; break; case 1 : $info = '<a href="javascript:unTop(' . $id . ')">取消置顶</a>'; break; } return $info; } function showRStatus($status, $id) { switch ($status) { case 0 : $info = '<a href="javascript:swHotStatus(' . $id . ','.$status.')">推荐</a>'; break; case 1 : $info = '<a href="javascript:swHotStatus(' . $id . ','.$status.')">取消推荐</a>'; break; } return $info; } function getTypes($type) { switch ($type) { case 1 : $info = '免费量房'; break; case 2 : $info = '免费预算'; break; case 3 : $info = '免费设计'; break; case 4 : $info = '免费咨询'; break; case 5 : $info = '活动'; break; } return $info; } function getCatePid($id) { $RegionConf = D ( "Category" ); $regWhere ["id"] = $id; $regionConf = $RegionConf->where ( $regWhere )->find (); return $regionConf ["pid"]; } function getCatePName($id) { $RegionConf = D ( "Category" ); $regWhere ["id"] = $id; $regionConf = $RegionConf->where ( $regWhere )->find (); return $regionConf ["name_1"]; } function getCompany($id){ $Company =D("Company"); $cmmp['uid']=$id; $comp=$Company->where($cmmp)->find(); return $comp['company_name']; } function getCompanys($id){ if($id==0){ return '本站'; }else{ $Company =D("Company"); $cmmp['id']=$id; $comp=$Company->where($cmmp)->find(); return $comp['company_name']; } } function getDesinger($id){ $Desinger =D("Designer"); $comp=$Desinger->getById($id); return $comp['name_1']; } function getCaseName($id){ $Desinger =D("Case"); $comp=$Desinger->getById($id); return $comp['name_1']; } function getCompanyUid($id){ $Company =D("Company"); $cmmp['id']=$id; $comp=$Company->where($cmmp)->find(); return $comp['uid']; } return array ( 'app_autorun_sysaction' => true, 'app_debug' => false, 'app_domain_deploy' => false, 'app_plugin_on' => false, 'app_file_case' => false, 'app_group_depr' => '.', 'app_group_list' => '', 'app_autoload_reg' => false, 'app_autoload_path' => '@.ORG.,@.Payment.,@.Sms.,Think.Util.,,@.Lottery.', 'app_config_list' => array ( 0 => 'taglibs', 1 => 'routes', 2 => 'tags', 3 => 'htmls', 4 => 'modules', 5 => 'actions', ), 'app_multileveldomain_deploy_on' => false, 'app_multileveldomain_deploy' => array ( ), 'cookie_expire' => 3600, 'cookie_domain' => '', 'cookie_path' => '/', 'cookie_prefix' => '', 'default_app' => '@', 'default_group' => 'Home', 'default_module' => 'Index', 'default_action' => 'index', 'default_charset' => 'utf-8', 'default_timezone' => 'PRC', 'default_ajax_return' => 'JSON', 'default_theme' => 'default', 'default_lang' => 'zh-cn', 'db_type' => 'mysql', 'db_host' => 'localhost', 'db_name' => 'deli', 'db_user' => 'root', 'db_pwd' => '', 'db_port' => '3306', 'db_prefix' => 'xc_', 'db_suffix' => '', 'db_fieldtype_check' => false, 'db_fields_cache' => true, 'db_charset' => 'utf8', 'db_deploy_type' => 0, 'db_rw_separate' => false, 'data_cache_time' => -1, 'data_cache_compress' => false, 'data_cache_check' => false, 'data_cache_type' => 'File', 'data_cache_path' => './admin/Runtime/Temp/', 'data_cache_subdir' => false, 'data_path_level' => 1, 'error_message' => '您浏览的页面暂时发生了错误！请稍后再试～', 'error_page' => '', 'html_cache_on' => false, 'html_cache_time' => 60, 'html_read_type' => 0, 'html_file_suffix' => '.shtml', 'lang_switch_on' => true, 'lang_auto_detect' => true, 'log_exception_record' => true, 'log_record' => false, 'log_file_size' => 2097152, 'log_record_level' => array ( 0 => 'EMERG', 1 => 'ALERT', 2 => 'CRIT', 3 => 'ERR', ), 'page_rollpage' => 5, 'page_listrows' => 20, 'session_auto_start' => true, 'show_run_time' => false, 'show_adv_time' => false, 'show_db_times' => false, 'show_cache_times' => false, 'show_use_mem' => false, 'show_page_trace' => false, 'show_error_msg' => true, 'tmpl_engine_type' => 'Think', 'tmpl_detect_theme' => false, 'tmpl_template_suffix' => '.html', 'tmpl_content_type' => 'text/html', 'tmpl_cachfile_suffix' => '.php', 'tmpl_deny_func_list' => 'echo,exit', 'tmpl_parse_string' => '', 'tmpl_l_delim' => '{', 'tmpl_r_delim' => '}', 'tmpl_var_identify' => 'array', 'tmpl_strip_space' => false, 'tmpl_cache_on' => false, 'tmpl_cache_time' => -1, 'tmpl_action_error' => 'Public:success', 'tmpl_action_success' => 'Public:success', 'tmpl_trace_file' => './ThinkPHP/Tpl/PageTrace.tpl.php', 'tmpl_exception_file' => './ThinkPHP/Tpl/ThinkException.tpl.php', 'tmpl_file_depr' => '/', 'taglib_begin' => '<', 'taglib_end' => '>', 'taglib_load' => true, 'taglib_build_in' => 'cx', 'taglib_pre_load' => '', 'tag_nested_level' => 3, 'tag_extend_parse' => '', 'token_on' => false, 'token_name' => '_eyoo_hash__', 'token_type' => 'md5', 'url_case_insensitive' => false, 'url_router_on' => false, 'url_dispatch_on' => true, 'url_model' => 0, 'url_pathinfo_model' => 2, 'url_pathinfo_depr' => '/', 'url_html_suffix' => '', 'url_auto_redirect' => true, 'var_group' => 'g', 'var_module' => 'm', 'var_action' => 'a', 'var_router' => 'r', 'var_page' => 'p', 'var_template' => 't', 'var_language' => 'l', 'var_ajax_submit' => 'ajax', 'var_pathinfo' => 's', 'lang_conf' => array ( 'article' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', 'brief' => 'varchar(255)', ), 'page' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', 'brief' => 'varchar(255)', ), 'category' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'case' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'construction' => array ( 'name' => 'varchar(255)', ), 'news' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'designer' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'brand' => array ( 'name' => 'varchar(255)', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', 'desc' => 'varchar(255)', ), 'link' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'huxing' => array ( 'name' => 'varchar(255)', 'content' => 'text', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'article_cate' => array ( 'name' => 'varchar(255)', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'ask_cate' => array ( 'name' => 'varchar(255)', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', ), 'course_cate' => array ( 'name' => 'varchar(255)', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', 'cate_desc' => 'varchar(255)', ), 'attachment' => array ( 'name' => 'varchar(255)', ), 'goods_attr' => array ( 'attr_value' => 'varchar(255)', ), 'goods_type' => array ( 'name' => 'varchar(255)', ), 'goods_type_attr' => array ( 'name' => 'varchar(255)', 'attr_value' => 'varchar(255)', ), 'goods_cate' => array ( 'name' => 'varchar(255)', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', 'cate_desc' => 'varchar(255)', ), 'goods' => array ( 'name' => 'varchar(255)', 'seokeyword' => 'varchar(255)', 'seocontent' => 'varchar(255)', 'goods_desc' => 'text', 'brief' => 'varchar(255)', ), 'nav' => array ( 'name' => 'varchar(255)', ), 'user_group' => array ( 'name' => 'varchar(255)', ), 'payment' => array ( 'name' => 'varchar(255)', 'description' => 'varchar(255)', ), 'spec' => array ( 'spec_name' => 'varchar(255)', ), 'spec_type' => array ( 'name' => 'varchar(255)', ), 'goods_spec' => array ( 'spec_name' => 'varchar(255)', ), 'currency' => array ( 'name' => 'varchar(100)', ), 'weight' => array ( 'name' => 'varchar(100)', ), 'delivery' => array ( 'name' => 'varchar(255)', 'desc' => 'varchar(255)', ), 'promote' => array ( 'memo' => 'varchar(255)', 'card_name' => 'varchar(255)', ), 'user_money_log' => array ( 'memo' => 'varchar(255)', ), 'user_score_log' => array ( 'memo' => 'varchar(255)', ), ), 'user_auth_key' => 'xc_cms', 'user_auth_on' => true, 'user_auth_type' => 2, 'admin_auth_key' => 'administrator', 'user_auth_model' => 'Admin', 'auth_pwd_encoder' => 'md5', 'user_auth_gateway' => '?m=Public&a=login', 'not_auth_module' => 'Public,Index', 'require_auth_module' => '', 'not_auth_action' => 'addVoteGroup,updateVoteGroup,removeVoteGroup,clearCache,main,getLangFileList,readTplContent,getFileList,getOptionUrl,getGroupTitle,getItemTitle,getVoteTitle,getOptionUrl,getIsMulti,getVoteTitle,getCityName,getItemUrl,getUserList,getSendStatusLink,getSendStatus,getSmsStatus,getCateList,getLayoutList,getPageList,getGroupCityName,getUsername,getGroupBondStatus,getEditLink,getUseNumber,getCreateNumber,getUserList,getAdvPositionName,getAdvInfo,getPaymentList,getPayment,checkAdm,checkSSL,getChildRegion,getRegionChildJS,getActionList,getOrderSN,showOrderList,getGroupBondLink,getOrderEditLink,getTypeAttr,setGallery', 'require_auth_action' => '', 'guest_auth_on' => false, 'guest_auth_id' => 0, 'auth_type' => array ( 0 => 'NODE', 1 => 'MODULE', 2 => 'ACTION', ), 'rbac_role_table' => 'role', 'rbac_user_table' => 'admin', 'rbac_access_table' => 'role_access', 'rbac_node_table' => 'role_node', 'rbac_nav_table' => 'role_nav', 'log_app' => array ( 'News' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'Announcement' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'Company' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'Case' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'Designer' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'Booking' => array ( 0 => 'foreverdelete', ), 'Construction' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'GoodsCate' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'Goods' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', 3 => 'delete', 4 => 'moveGoods', 5 => 'sendMail', ), 'GoodsGallery' => array ( 0 => 'doBatch', ), 'NewsGallery' => array ( 0 => 'doBatch', ), 'Suppliers' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', 3 => 'doReset', 4 => 'reset', ), 'ArticleCate' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', ), 'Article' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', 3 => 'moveArticle', ), 'Message' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', 3 => 'forbid', 4 => 'resume', 5 => 'swTopStatus', ), 'Order' => array ( 0 => 'save_uncharge', 1 => 'save_incharge', 2 => 'foreverdelete', ), 'OrderConsignment' => array ( 0 => 'save', ), 'OrderReConsignment' => array ( 0 => 'save', ), 'Public' => array ( 0 => 'checkLogin', ), 'UserGroup' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', 3 => 'forbid', 4 => 'resume', ), 'User' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', 3 => 'forbid', 4 => 'resume', ), 'UserMoney' => array ( 0 => 'resumeIncharge', 1 => 'forbidIncharge', 2 => 'foreverdeleteIncharge', 3 => 'resumeUncharge', 4 => 'forbidUncharge', 5 => 'foreverdeleteUncharge', ), 'Referrals' => array ( 0 => 'pay', 1 => 'unPay', ), 'EcvType' => array ( 0 => 'insert', 1 => 'update', 2 => 'foreverdelete', 3 => 'emptyAll', ), 'Ecv' => array ( 0 => 'insert', 1 => 'foreverdelete', ), 'Database' => array ( 0 => 'dump', 1 => 'restore', ), ), '_taglibs_' => array ( 'eyoo' => '@.TagLib.TagLibEyoo', ), ); ?>